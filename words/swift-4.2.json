{
    "platform": "Swift",
    "version": "4.2",
    "words": [
        {"word": "associatedtype"},
        {"word": "class"},
        {"word": "deinit"},
        {"word": "enum"},
        {"word": "extension"},
        {"word": "fileprivate"},
        {"word": "func"},
        {"word": "import"},
        {"word": "init"},
        {"word": "inout"},
        {"word": "internal"},
        {"word": "let"},
        {"word": "open"},
        {"word": "operator"},
        {"word": "private"},
        {"word": "protocol"},
        {"word": "public"},
        {"word": "static"},
        {"word": "struct"},
        {"word": "subscript"},
        {"word": "typealias"},
        {"word": "var"},
        {"word": "break"},
        {"word": "case"},
        {"word": "continue"},
        {"word": "default"},
        {"word": "defer"},
        {"word": "do"},
        {"word": "else"},
        {"word": "fallthrough"},
        {"word": "for"},
        {"word": "guard"},
        {"word": "if"},
        {"word": "in"},
        {"word": "repeat"},
        {"word": "return"},
        {"word": "switch"},
        {"word": "where"},
        {"word": "while"},
        {"word": "as"},
        {"word": "Any"},
        {"word": "catch"},
        {"word": "false"},
        {"word": "is"},
        {"word": "nil"},
        {"word": "rethrows"},
        {"word": "super"},
        {"word": "self"},
        {"word": "Self"},
        {"word": "throw"},
        {"word": "throws"},
        {"word": "true"},
        {"word": "try"},
        {"word": "_"},
        {"word": "#available"},
        {"word": "#colorLiteral"},
        {"word": "#column"},
        {"word": "#else"},
        {"word": "#elseif"},
        {"word": "#endif"},
        {"word": "#error"},
        {"word": "#file"},
        {"word": "#fileLiteral"},
        {"word": "#function"},
        {"word": "#if"},
        {"word": "#imageLiteral"},
        {"word": "#line"},
        {"word": "#selector"},
        {"word": "#sourceLocation"},
        {"word": "#warning"},
        {"word": "associativity"},
        {"word": "convenience"},
        {"word": "dynamic"},
        {"word": "didSet"},
        {"word": "final"},
        {"word": "get"},
        {"word": "infix"},
        {"word": "indirect"},
        {"word": "lazy"},
        {"word": "left"},
        {"word": "mutating"},
        {"word": "none"},
        {"word": "nonmutating"},
        {"word": "optional"},
        {"word": "override"},
        {"word": "postfix"},
        {"word": "precedence"},
        {"word": "prefix"},
        {"word": "Protocol"},
        {"word": "required"},
        {"word": "right"},
        {"word": "set"},
        {"word": "Type"},
        {"word": "unowned"},
        {"word": "weak"},
        {"word": "willSet"}
    ]
}